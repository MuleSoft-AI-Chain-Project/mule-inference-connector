<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns:mtf="http://www.mulesoft.org/schema/mule/mtf"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
        http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
        http://www.mulesoft.org/schema/mule/mtf http://www.mulesoft.org/schema/mule/mtf/current/mule-mtf.xsd">

    <munit:config name="TextGenerationModelNameValueProvidersTest.xml"/>

    <mtf:tooling-test name="ai21labs-model-name-values-test">
        <mtf:get-values-from-config config-ref="Ai21labsConfig" parameter="ai21LabsModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(2)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="anthropic-model-name-values-test">
        <mtf:get-values-from-config config-ref="AnthropicConfig" parameter="anthropicModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(4)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="azure-ai-foundry-model-name-values-test">
        <mtf:get-values-from-config config-ref="azureAiFoundryConfig" parameter="azureModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(2)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="azure-openai-model-name-values-test">
        <mtf:get-values-from-config config-ref="AzureOpenAIConfig" parameter="azureModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(1)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="cerebras-model-name-values-test">
        <mtf:get-values-from-config config-ref="CerebrasConfig" parameter="cerebrasModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(2)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="cohere-model-name-values-test">
        <mtf:get-values-from-config config-ref="CohereConfig" parameter="cohereModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(6)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="deepinfra-model-name-values-test">
        <mtf:get-values-from-config config-ref="DeepinfraConfig" parameter="deepInfraModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(1)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="deepseek-model-name-values-test">
        <mtf:get-values-from-config config-ref="DeepseekConfig" parameter="deepseekModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(1)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="fireworks-model-name-values-test">
        <mtf:get-values-from-config config-ref="FireworksConfig" parameter="fireworksModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(1)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="github-model-name-values-test">
        <mtf:get-values-from-config config-ref="GithubConfig" parameter="gitHubModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(7)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="groq-model-name-values-test">
        <mtf:get-values-from-config config-ref="GroqConfig" parameter="groqModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(17)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="huggingface-model-name-values-test">
        <mtf:get-values-from-config config-ref="HuggingFaceConfig" parameter="huggingFaceModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(4)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="llmapi-model-name-values-test">
        <mtf:get-values-from-config config-ref="llmapiConfig" parameter="llmApiModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(1)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="mistralai-model-name-values-test">
        <mtf:get-values-from-config config-ref="MistralAIConfig" parameter="mistralAIModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(4)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="nvidia-model-name-values-test">
        <mtf:get-values-from-config config-ref="NvidiaConfig" parameter="nvidiaModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(2)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="openaicompatible-model-name-values-test">
        <mtf:get-values-from-config config-ref="OpenAICompatibleConfig" parameter="openAICompatibleModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(5)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="openai-model-name-values-test">
        <mtf:get-values-from-config config-ref="OpenAIConfig" parameter="openAIModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(5)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="openrouter-model-name-values-test">
        <mtf:get-values-from-config config-ref="OpenrouterConfig" parameter="openRouterModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(32)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="ollama-model-name-values-test">
        <mtf:get-values-from-config config-ref="OllamaConfig" parameter="ollamaModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(6)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="Perplexity-model-name-values-test">
        <mtf:get-values-from-config config-ref="PerplexityConfig" parameter="perplexityModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(5)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="portkey-model-name-values-test">
        <mtf:get-values-from-config config-ref="PortkeyConfig" parameter="portkeyModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(9)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="together-model-name-values-test">
        <mtf:get-values-from-config config-ref="TogetherConfig" parameter="togetherModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(1)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="vertexai-express-model-name-values-test">
        <mtf:get-values-from-config config-ref="VertexAiExpressConfig" parameter="vertexAIExpressModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(6)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="xai-model-name-values-test">
        <mtf:get-values-from-config config-ref="XAiConfig" parameter="xAiModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(4)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="xinference-model-name-values-test">
        <mtf:get-values-from-config config-ref="XInferenceConfig" parameter="xInferenceModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(5)]"/>
        </mtf:validation>
    </mtf:tooling-test>

    <mtf:tooling-test name="zhipu-model-name-values-test">
        <mtf:get-values-from-config config-ref="ZhipuConfig" parameter="zhipuAIModelName"/>
        <mtf:validation>
            <munit-tools:assert-that expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(2)]"/>
        </mtf:validation>
    </mtf:tooling-test>

</mule>